syntax = "proto3";
package cash.z.wallet.sdk.rpc;
option go_package = "walletrpc";
option swift_prefix = "";
import "compact_formats.proto";

// A BlockID message contains identifiers to select a block: a height or a
// hash. Specification by hash is not implemented, but may be in the future.
message BlockID {
    uint64 height = 1;
    bytes hash = 2;
}

// BlockRange specifies a series of blocks from start to end inclusive.
// Both BlockIDs must be heights; specification by hash is not yet supported.
message BlockRange {
    BlockID start = 1;
    BlockID end = 2;
}

// A TxFilter contains the information needed to identify a particular
// transaction: either a block and an index, or a direct transaction hash.
// Currently, only specification by hash is supported.
message TxFilter {
    BlockID block = 1;
    uint64 index = 2;
    bytes hash = 3;
}

// RawTransaction contains the complete transaction data. It also optionally includes
// the block height in which the transaction was included
message RawTransaction {
    bytes data = 1;
    uint64 height = 2;
}

// A SendResponse encodes an error code and a string. It is currently used
// only by SendTransaction(). If error code is zero, the operation was
// successful; if non-zero, it and the message specify the failure.
message SendResponse {
    int32 errorCode = 1;
    string errorMessage = 2;
}

// Chainspec is a placeholder to allow specification of a particular chain fork.
message ChainSpec {}

// Empty is for gRPCs that take no arguments, currently only GetLightdInfo.
message Empty {}

// The LightdInfo returns various information about this lightwalletd instance
// and the state of the blockchain.
message LightdInfo {
    string version = 1;
    string vendor = 2;
    bool   taddrSupport = 3;
    string chainName = 4;
    uint64 saplingActivationHeight = 5;
    string consensusBranchId = 6;
    uint64 blockHeight = 7;
}

// TransparentAddressBlockFilter restricts the results to the given address
// or block range.
message TransparentAddressBlockFilter {
    string address = 1;
    BlockRange range = 2;
}

message RegisterNameCommitmentRequest {
    string name = 1;
    string controllingaddress = 2;
    string referralidentity = 3;
}

message NameReservation {
    string name = 1;
    string salt = 2;
    string referral = 3;
    string parent = 4;
    string nameid = 5;
}

// Name reservation with txid.
message RegisterNameCommitmentResponse {
    string txid = 1;
    NameReservation namereservation = 2;
}

message Identity {
    string name = 1;
    map<string, string> contentmap = 2;
    repeated string primaryaddresses = 3;
    uint32 minimumsignatures = 4;
    string privateaddress = 5;
    string revocationauthority = 6;
    string recoveryauthority = 7;
    uint32 flags = 8;
    uint32 version = 9;
    string parent = 10;
}

message RegisterIdentityRequest {
    string txid = 1;
    NameReservation namereservation = 2;
    Identity identity = 3;
    double feeoffer = 4;
}

message RegisterIdentityResponse {
    string txid = 1;
}

message GetIdentityRequest {
    string identity = 1; // Name or address of identity
}

message IdentityInfo {
    Identity identity = 1;
    string status = 2;
    bool canspendfor = 3;
    bool cansignfor = 4;
    uint64 blockheight = 5;
    string txid = 6;
    uint32 vout = 7;
}

message GetIdentityResponse {
    IdentityInfo identityinfo = 1;
}

message RevokeIdentityRequest {
    string identity = 1; // Name or address of identity to revoke
}

message RevokeIdentityResponse {
    string txid = 1;
}
message RecoverIdentityRequest {
    Identity identity = 1;
}

message RecoverIdentityResponse {
    string txid = 1;
}

message UpdateIdentityRequest {
    Identity identity = 1;
}

message UpdateIdentityResponse {
    string txid = 1;
}

message VerifyMessageRequest {
    string signer = 1;
    string signature = 2;
    string message = 3;
    bool checklatest = 4;

}

message VerifyMessageResponse {
    bool signatureisvalid = 1;
}


service CompactTxStreamer {
    // Compact Blocks
    rpc GetLatestBlock(ChainSpec) returns (BlockID) {}
    rpc GetBlock(BlockID) returns (CompactBlock) {}
    rpc GetBlockRange(BlockRange) returns (stream CompactBlock) {}

    // Transactions
    rpc GetTransaction(TxFilter) returns (RawTransaction) {}
    rpc SendTransaction(RawTransaction) returns (SendResponse) {}

    // t-Address support
    rpc GetAddressTxids(TransparentAddressBlockFilter) returns (stream RawTransaction) {}

    // Misc
    rpc GetLightdInfo(Empty) returns (LightdInfo) {}

    rpc RegisterNameCommitment(RegisterNameCommitmentRequest) returns (RegisterNameCommitmentResponse) {}
    rpc RegisterIdentity(RegisterIdentityRequest) returns (RegisterIdentityResponse) {}
    rpc RevokeIdentity(RevokeIdentityRequest) returns (RevokeIdentityResponse) {}
    rpc RecoverIdentity(RecoverIdentityRequest) returns (RecoverIdentityResponse) {}
    rpc UpdateIdentity(UpdateIdentityRequest) returns (UpdateIdentityResponse) {}
    rpc GetIdentity(GetIdentityRequest) returns (GetIdentityResponse) {}
    rpc VerifyMessage(VerifyMessageRequest) returns (VerifyMessageResponse) {}

}
